name: Docker Image CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  setup:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      version: ${{ steps.set-matrix.outputs.version }}
    steps:
    - id: set-version
      shell: bash
      run: echo "::set-output name=version::$(ls |egrep '^[0-9]{4}.[0-9]{2}$')"
    - id: set-matrix
      shell: bash
      run: |
        VERSION=$(ls |egrep '^[0-9]{4}.[0-9]{2}$')
        echo $VERSION
        cd $VERSION
#        LIST_DIR=$(find . -type d|perl -e '
#          while(<>){
#            $_=~s/.\///g;
#            chomp($_);
#            if($_ ne "."){
#              push(@arr,"\\\"$_\\\"")
#            }
#          }
#          print join(",",@arr)
#          ')
#        echo "::set-output name=matrix::[$LIST_DIR]"
  build:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix: 
        image_base: ${{fromJson(needs.setup.outputs.matrix)}}
    env: 
      VERSION: ${{needs.setup.outputs.version}}
      VARIANT: ${{ matrix.image_base }}
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image
      run: docker build . --file $VERSION/$VARIANT/Dockerfile --tag $GITHUB_REPOSITORY:$GITHUB_SHA
    - name: Test docker image with root
      run: docker run --rm $GITHUB_REPOSITORY:$GITHUB_SHA zef list --installed && docker run --rm $GITHUB_REPOSITORY:$GITHUB_SHA raku -e 'say $*VM.version'
    - name: Test docker image with raku
      run: docker run --rm --user raku $GITHUB_REPOSITORY:$GITHUB_SHA zef list --installed && docker run --rm --user raku $GITHUB_REPOSITORY:$GITHUB_SHA raku -e 'say $*VM.version'
